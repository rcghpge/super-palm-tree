name: "Palm Tree Code Scans"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '24 23 * * 6'

jobs:
  analyze:
    name: Analyze (${{ matrix.language }})
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        include:
          - language: c-cpp
            build-mode: manual
          - language: python
            build-mode: none
          - language: rust
            build-mode: manual

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Rust env (stable)
        if: matrix.language == 'rust'
        uses: dtolnay/rust-toolchain@stable

      - name: Set up compilers
        if: matrix.language == 'c-cpp'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential gcc clang cmake ninja-build

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          build-mode: ${{ matrix.build-mode }}

      - name: Build with GCC compiler
        if: matrix.language == 'c-cpp'
        run: |
          rm -rf build && mkdir build
          cmake -S . -B build -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++
          cmake --build build --config Release -- -v

      - name: Build with Clang compiler
        if: matrix.language == 'c-cpp'
        run: |
          rm -rf build && mkdir build
          cmake -S . -B build -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++
          cmake --build build --config Release -- -v

      - name: Build with rustc compiler
        if: matrix.language == 'rust'
        shell: bash
        env:
          RUSTFLAGS: "-C debuginfo=2"
        run: |
          set -euo pipefail
          if [[ -f Cargo.toml ]]; then
            cargo build --locked --verbose
          else
            rustc -C debuginfo=2 -C opt-level=0 -o etl rust/etl.rs
            ./etl --db world_data.db --table countries --csv countries.csv || true
          fi

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{ matrix.language }}"
